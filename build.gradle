buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        classpath('io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE')
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'io.spring.dependency-management'

    group = 'me.gyenam05.used-book'
    version = '0.0.1'
    sourceCompatibility = 10

    repositories {
        mavenCentral()
    }


    dependencies {
//        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//        implementation('org.springframework.boot:spring-boot-starter-web')
//        runtimeOnly('com.h2database:h2')
////    runtimeOnly('mysql:mysql-connector-java')
        implementation('org.springframework.boot:spring-boot-starter')
        implementation('org.projectlombok:lombok')

//        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }
}

project(":used-book-common") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = false
    jar.enabled = true

    dependencies {

        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
        runtimeOnly('com.h2database:h2')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }
}

project(":used-book-scheduler") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        compile project(":used-book-common")
    }
}

project(":used-book-crawler") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        compile project(":used-book-common")

        compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    }
}

project(":used-book-api") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        compile project(":used-book-common")

        implementation('org.springframework.boot:spring-boot-starter-web')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }
}